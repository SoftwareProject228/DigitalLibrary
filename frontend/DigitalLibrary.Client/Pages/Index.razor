@page "/"
@using DigitalLibrary.Client.ViewModels
@using System.Collections.Specialized
@inject NavigationManager NavigationManager
@inject IndexViewModel ViewModel
@inject IJSRuntime JsRuntime

<section class="sect">
    <p>Welcome to the digital library, @(String.IsNullOrWhiteSpace(ViewModel.UserName) ? "Unknown user" : ViewModel.UserName). Here you can see your materials.</p>
    <p><span>Type 'help' + <kbd>Enter</kbd> -- for available commands.</span></p>
</section>

<section>
    
    @foreach (var component in ViewModel.Components)
    {
        if (component.Type == ItemType.CommandItem)
        {
            <CommandInput OnCommand="@OnCommand" DataContext="(CommandInputViewModel)component"/>
        }
        else if (component.Type == ItemType.CommandStomp)
        {
            <CommandStomp DataContext="(CommandStompViewModel)component"/>
        }
        else if (component.Type == ItemType.CommandSearch)
        {
            <Search DataContext="(SearchViewModel)component"/>
        }
        else if (component.Type == ItemType.UploadPost)
        {
            <UploadPost DataContext="(UploadPostViewModel)component"/>
        }
    }

</section>

@code
{
    protected override void OnInitialized()
    {
        if (String.IsNullOrWhiteSpace(ViewModel.UserName))
            NavigationManager.NavigateTo("/login");
        else
        {
            ViewModel.Components.CollectionChanged -= ComponentsOnChanged;
            ViewModel.Components.CollectionChanged += ComponentsOnChanged;
            ViewModel.InitializeComponents();
        }
    }

    private void ComponentsOnChanged(object sender, NotifyCollectionChangedEventArgs e)
    {
        StateHasChanged();
    }

    private async void OnCommand(string command, IDictionary<string, string> parameters)
    {
        ViewModel.ExecuteCommand(command, parameters);
        await JsRuntime.InvokeVoidAsync("focusElement", "command");
        await JsRuntime.InvokeVoidAsync("focusElement", "command");
        StateHasChanged();
    }
}
